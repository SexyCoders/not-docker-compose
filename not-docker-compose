#!/bin/bash

declare -A ndc_config
declare -A ndc_state
command=$1;
top_level_commands=("network","service");
network_commands=;
no_goodbye=0;
no_hello=0;
config_lines=();

array_contains () { 
    local array="$1[@]"
    local seeking=$2
    local in=1
    for element in "${!array}"; do
        if [[ $element == "$seeking" ]]; then
            in=0
            break
        fi
    done
    return $in
}

on_init(){
  echo "init";
}

before_exit(){
  echo "exit";
}

parse_config(){
  config_file="$1"
  if [ ! -f "$config_file" ]; then
    config_file="composefile";
    if [ ! -f "$config_file" ]; then
      config_file="Composefile";
      if [ ! -f "$config_file" ]; then
        echo "Config file not found! Aborting!" >&2
        return;
      fi
    fi
  fi

  while read -r line; do
    config_lines+=("$line")
  done < $config_file;

  for line in ${config_lines[@]}; do
  #echo "$config_lines";
    IFS=' ' read -ra my_array <<< $line
      array_contains top_level_commands "${my_array[0]}" && echo "${my_array[0]}";
  done
}

parse_config_parameters(){
  j=0;
  local t=( $@ );
  while [ $j -lt $# ];do
    #echo $j; 
    option=${t[$j]}
    #echo $option;
    case $option in
      "init")

      ;;
      #"update")
      #;;
  esac
  ((j++));
  done
}

parse_app_parameters(){
  j=0;
  ndc_state+=([app]=$1);
  echo "${ndc_state[app]}";
  local t=( $@ );
  while [ $j -lt $# ];do
    option=${t[$j]}
    case $option in
      "-f")
        config_file=${t[((++j))]}
      ;;
      "--file")
        config_file=${t[((++j))]}
      ;;
  esac
  ((j++));
  done
}

check_config_path(){
  j=0;
  local t=( $@ );
  config_file="composefile";
  while [ $j -lt $# ];do
    option=${t[$j]}
    case $option in
      "-f")
        config_file=${t[((++j))]}
      ;;
      "--file")
        config_file=${t[((++j))]}
      ;;
  esac
  ((j++));
  done
  if [ ! -f "$config_file" ]; then
      config_file="Composefile";
    if [ ! -f "$config_file" ]; then
      echo "Config file not found! Aborting!" >&2
      return;
    fi
  fi
  echo "Using config file '$config_file"\';
}

#on_init;
echo "-------------------------------------------";
echo "Running not-docker-compose version 0.1-beta";
echo "-------------------------------------------";
check_config_path $@;
if [ "$1" = "config" ];then
  parse_config_parameters $@;
elif [ "$1" = "enable" ];then
  echo "enable command";
elif [ "$1" = "disable" ];then
  echo "disable command";
else
  parse_app_parameters $@;
fi
#before_exit;
