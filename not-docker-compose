#!/bin/bash

declare -A ndc_config
declare -A ndc_state
command=$1;
allowed_commands=("test");
no_goodbye=0;
no_hello=0;
config_lines=();

on_init(){
  recover_env_state;

  if [ ! no_hello ];then
    hello;
  fi
}

before_exit(){
  store_env_state;

  if [ ! no_goodbye ];then
    goodbye;
  fi
}

store_env_state(){
  echo "Storing env state to filesystem.";
}

recover_env_state(){
  echo "Recovering env state from filesystem.";
}

goodbye(){
  echo "****************************************************************";
  echo "*************************** GOODBYE ****************************";
  echo "****************************************************************";
}

hello(){
  echo "****************************************************************";
  echo "********************** NOT-DOCKER-COMPOSE **********************";
  echo "****************************************************************";
}

parse_config(){
  config_file="$1"
  if [ ! -f "$config_file" ]; then
    if [ ! -f "composefile" ]; then
      if [ ! -f "Composefile" ]; then
        echo "Config file not found! Aborting!"
        return;
      fi
    fi
  fi

  while IFS= read -r line; do
    config_lines+=("$line")
    #echo ${config_lines[-1]};
  done < $config_file;
  echo "check"

  for line in ${config_lines}; do
    IFS=' ' read -ra my_array <<< $line
        #echo $(echo $allowed_commands | grep -w -q 'test');
      if [[ " ${allowed_commands[*]} " =~ " ${my_array[0]} " ]]; then
      # whatever you want to do when array contains value
      echo sdfgsdfgfd;
      fi
  done
}

on_init;
if [ "$1" = "config" ];then
  parse_config "$2";
fi
before_exit;
